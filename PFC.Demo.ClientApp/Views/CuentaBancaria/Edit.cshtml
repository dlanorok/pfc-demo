@model PFC.Demo.Domain.Models.CuentaBancariaModel
@{
    var viewTitle  = "Crear Cuenta";
    var actionName = "Create";
    var actionForm = Url.Action(actionName, "CuentaBancaria");

    if (Model.Id > 0)
    {
        viewTitle  = "Editar Cuenta";
        actionName = "Edit";
        actionForm = Url.Action(actionName, "CuentaBancaria", new { Id = Model.Id });
    }

    var tipos = PFC.Demo.ClientApp.Services.Utils.GetTiposDropdownItems();
}

<form id="CuentaBancariaForm" data-action="@Html.Raw(actionForm)">
    <!-- Modal -->
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header bg-dark text-bg-dark">
                <h5 class="modal-title" id="editModalLabel">@viewTitle</h5>
                <button type="button" class="btn close" data-bs-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                @Html.HiddenFor(model => model.PersonaId)
                @Html.HiddenFor(model => model.Id)

                <div class="alert alert-success alert-save-success" style="display:none;" role="alert">
                    El Registro se ha guardado exitosamente!
                </div>
                <div class="alert alert-danger alert-save-error" style="display:none;" role="alert">
                    Hubo un error al guardar el registro!
                </div>

                <div class="form-horizontal">

                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                    <div class="form-group row">
                        <div class="col-md-4">
                            @Html.LabelFor(model => model.Tipo, htmlAttributes: new { @class = "control-label" })
                        </div>
                        <div class="col-md-8">
                            @Html.EnumDropDownListFor(model => model.Tipo, "Seleccione el tipo de cuenta", new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Tipo, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group row">
                        <div class="col-md-4">
                            @Html.LabelFor(model => model.NumeroCuenta, htmlAttributes: new { @class = "control-label" })
                        </div>
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.NumeroCuenta, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.NumeroCuenta, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group row">
                        <div class="col-md-4">
                            @Html.LabelFor(model => model.Balance, htmlAttributes: new { @class = "control-label" })
                        </div>
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.Balance, new { htmlAttributes = new { @type = "number", min = 0, @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Balance, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group row">
                        <div class="col-md-4">
                            @Html.LabelFor(model => model.Comentarios, htmlAttributes: new { @class = "control-label" })
                        </div>
                        <div class="col-md-8">
                            @Html.TextAreaFor(model => model.Comentarios, new { @class = "form-control w-100" })
                            @Html.ValidationMessageFor(model => model.Comentarios, "", new { @class = "text-danger" })
                        </div>
                    </div>

                </div>


            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                <button type="submit" class="btn btn-primary">
                      <i class="fa fa-check"></i>Guardar
                </button>
            </div>
        </div>
    </div>
</form>

<script>
    app.cuenta_bancaria.editar();    
</script>