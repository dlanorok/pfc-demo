@model PFC.Demo.Domain.Models.PersonaViewModel  

@{
    ViewBag.Title = "Informacion Personal";
    var personaId = Model.Id;
}

<h2>Cliente</h2>

<div>
    <h4>@ViewBag.Title</h4>
    <div class="btn-group" role="group" aria-label="">
        @Html.ActionLink("Modificar", "Edit", new { id = Model.Id }, new { @class = "btn btn-primary btn-outline editar-persona" })
        <a class="btn btn-danger btn-outline eliminar-persona" data-action-url="@Url.Action("Delete", new { id = Model.Id })">Eliminar</a>

    </div>
    <hr/>

    @Html.HiddenFor(model => model.Id)
    <div class="row">
        <div class="col">
            <dl class="dl-horizontal">
                <dt>
                    @Html.DisplayNameFor(model => model.Identificacion)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.Identificacion)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.Nombre)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.Nombre)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.Apellidos)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.Apellidos)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.FechaNacimiento)
                </dt>

                <dd>
                    @Model.FechaNacimiento.ToString("dd/MM/yyyy")
                </dd>


            </dl>
        </div>
        <div class="col">
            <dl class="dl-horizontal">


                <dt>
                    @Html.DisplayNameFor(model => model.Pais)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.Pais)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.Provincia)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.Provincia)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.Ciudad)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.Ciudad)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.Direccion)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.Direccion)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.Referencia)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.Referencia)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.CodigoPostal)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.CodigoPostal)
                </dd>

            </dl>
        </div>
    </div>

    <div class="row">
        <div class="col" id="cuentas_bancarias">
            @{
                Html.RenderPartial("CuentasBancarias", Model);
            }
        </div>
    </div>
</div>
<p>
    @Html.ActionLink("Volver al Inicio", "Index")
</p>

@section Scripts{
    <script>    
        document.addEventListener("DOMContentLoaded", function (){
            // Agrego la configuracion para eliminar Clientes
            app.cliente.configure_delete();
             
            // Inicializo los servicios para administrar las cuentas bancarias.
            var $url_crear_cuenta = "@Url.Action("Create", "CuentaBancaria", new { personaId = personaId })";
            var $url_editar_cuenta = "@Url.Action("Edit", "CuentaBancaria")";
            var $url_eliminar_cuenta = "@Url.Action("Delete", "CuentaBancaria")";
            app.cuenta_bancaria.initialize($url_crear_cuenta, $url_editar_cuenta, $url_eliminar_cuenta)
        });
    </script>
}